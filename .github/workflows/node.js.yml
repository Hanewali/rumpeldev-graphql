# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: GraphQL server deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]        
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install Dependencies
      run: npm ci
    - name: Build for production
      run: npm run build --if-present
    - uses: jwsi/secret-parser@v1
    - name: Get DBUSER for config
      with:
        filename: ecosystem.config.js
        secret-name: secret_DBUSER
        secret-value: ${{ secrets.DBUSER }}
    - name: Get DBPASSWORD for config
      with:
        filename: ecosystem.config.js
        secret-name: secret_DBPASSWORD
        secret-value: ${{ secrets.DBPASSWORD }}
    - name: Get DBURL for config
      with:
        filename: ecosystem.config.js
        secret-name: secret_DBURL
        secret-value: ${{ secrets.DBURL }}
    - name: Get DBPORT for config
      with:
        filename: ecosystem.config.js
        secret-name: secret_DBPORT
        secret-value: ${{ secrets.DBPORT }}
    - name: Get DBNAME for config
      with:
        filename: ecosystem.config.js
        secret-name: secret_DBNAME
        secret-value: ${{ secrets.DBNAME }}
    - name: Deploy to Mikrus
      uses: up9cloud/action-rsync@v1.3
      env:
        SOURCE: ./
        HOST: ${{ secrets.REMOTE_HOST }}
        USER: ${{ secrets.REMOTE_USER }}
        KEY: ${{ secrets.DEPLOY_KEY }}
        TARGET: ${{ secrets.REMOTE_TARGET_GRAPHQL }}
        PORT: ${{ secrets.REMOTE_PORT }}
